说起软件的解耦必然需要谈论 耦合度，降低耦合度即可以理解为解耦，模块间有依赖关系必然存在耦合，理论上的绝对零耦合是做不到的，但可以通过一些现有的方法将耦合度降至最低。

做事情要想事半功倍，就要高处着眼，触摸到事情的脉络。当今流行着各种眼花缭乱的软件框架，不管是struts，还是spring,hibernate，还是.net，还是各种前端UI框架，其设计的核心思想是：

尽可能减少代码耦合，如果发现代码耦合，就要采取解耦技术；

解耦方法有但不限有如下几种：

（a）采用现有设计模式实现解耦，如 事件驱动模式、 观察者模式、 责任链模式等都可以达到解耦的目的；

（b）采用面向接口的方式编程，而不是用直接的类型引用，除非在最小内聚单元内部。但使用该方法解耦需要注意不要滥用接口。

（c） 高内聚，往往会带来一定程度的低耦合度。高内聚决定了内部自行依赖，对外只提供必须的接口或消息对象，那么由此即可达成较低的耦合度



耦合是指两个或两个以上的体系或两种运动形式间通过相互作用而彼此影响以至联合起来的现象。 解耦就是用数学方法将两种运动分离开来处理问题，常用解耦方法就是忽略或简化对所研究问题影响较小的一种运动，只分析主要的运动